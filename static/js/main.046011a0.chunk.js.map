{"version":3,"sources":["data.js","components/Character.js","components/Header.js","components/TextBox.js","components/Ability.js","components/SmallAbility.js","components/AbilitiesBox.js","components/Stat.js","components/DeathSaves.js","components/BattleStats.js","App.js","index.js"],"names":["src_data","Character","updateCharacter","Object","classCallCheck","this","character_name","character_info","class","background","player_name","race","alignment","exp_points","appearance","age","height","weight","eyes","skin","hair","abilities","name","score","skills","hasSkill","modifier","smAbilities","battleStats","armor_class","value","initiative","speed","hit_points","max","maxName","maxValue","temp_hit_points","hit_dice","death_saves","successes","failures","attributes","content","title","columns","lines","textBoxes","languages","equipment","features","attacks","atkBonus","dmg","dmgType","spellStats","spell_save_DC","spellcasting_ability","spell_attack_bonus","array","Math","floor","random","length","numTimes","numFaces","total","i","numbers","done","j","temp","result","map","a","split","slice","join","index","_this","axios","get","concat","then","response","_response$data","data","hit_die","abs","getShorthandAbilities","getModifier","con","int","cha","wis","console","log","proficiency_bonus","catch","_this2","_response$data2","ability_bonuses","forEach","ab","dex","find","rolls","push","rollDice","bubble","first","randomFromList","second","_this3","backgrounds","DATA","characterNames","eyeColors","skinColors","hairColors","ability","num","randomAbility","skill","randomRace","randomClass","randomAlignment","Header","props","info","attributes1","attributes2","key","className","pText","react_default","createElement","TextBox","atk","col1","col2","toUpperCase","Ability","skillComponents","type","SmallAbility","AbilitiesBox","abilityList","smAbilityList","sm","Stat","_props$data","maxComponent","DeathSaves","checkBoxes","n","item","BattleStats","_props$battleStats","App","possibleConstructorReturn","getPrototypeOf","call","state","character","randomizeCharacter","bind","assertThisInitialized","obj","setState","randomize","_this$state$character","href","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.046011a0.chunk.js","sourcesContent":["const eyeColors = [ \"Black\", \"Blue\", \"Brown\", \"Gray\", \"Green\", \"Hazel\", \"Violet\" ];\r\n\r\nconst hairColors = [ \"Black\", \"Amber\", \"Yellow\", \"Brown\", \"Blond\", \"Auburn\", \"Red\", \"Gray\", \"White\" ];\r\n\r\nconst skinColors = [ \"Pale\", \"Fair\", \"Light-Tan\", \"Tan\", \"Dark-Tan\", \"Olive\", \"Brown\", \"Light-Blue\", \"White\", \"Red\", \"Pink\", \"Emerald-Green\", \"Purple\" ];\r\n\r\nconst backgrounds = [ \"Acolyte\", \"Charlatan\", \"City Watch\", \"Clan Crafter\", \"Cloistered Scholar\", \"Courtier\", \"Criminal\", \"Entertainer\", \"Faction Agent\", \"Far Traveler\", \"Folk Hero\", \"Gladiator\", \"Guild Artisan\", \"Guild Merchant\", \"Haunted One\", \"Hermit\", \"Inheritor\", \"Investigator\", \"Knight\", \"Knight of the Order\", \"Mercenary\", \"Veteran\", \"Noble\", \"Outlander\", \"Pirate\", \"Sage\", \"Sailor\", \"Soldier\", \"Spy\", \"Bounty Hunter\", \"Urchin\" ];\r\n\r\nconst characterNames = [ \"Dian\", \"Nese\", \"Falledrick\", \"Mae\", \"Valhein\", \"Dol\", \"Earl\", \"Cedria\", \"Azulei\", \"Yun\", \"Cybel\", \"Ina\", \"Foolly\", \"Skili\", \"Juddol\", \"Janver\", \"Viska\", \"Hirschendy\", \"Silka\", \"Hellsturn\", \"Essa\", \"Mykonos\", \"Fenton\", \"Tyrena\", \"Inqoul\", \"Mankov\", \"Derilia\", \"Hexema\", \"Wyton\", \"Kaedum\", \"Gouram\", \"Libertia\", \"Berasailles\", \"Juxta\", \"Tae’hr\", \"Comtol\", \"Gherak\", \"Hest\", \"Qony\", \"Masamka\", \"Twyll\", \"Tenos\", \"Axim\", \"Westrynda\", \"Saphros\", \"Olkham\", \"Handok\", \"Kemetra\", \"Yos\", \"Wentingle\", \"Ames\", \"Molosh\", \"Inkov\", \"Phasasia\", \"Ziedinghal\", \"Bregul\", \"Eishvack\", \"Lora\", \"Krenting\", \"Symbole\", \"Elignoir\", \"Keligkrul\", \"Qwey\", \"Vindinglag\", \"Kusakira\", \"Weme\", \"Fayd\", \"Rushvita\", \"Vulkor\", \"Amers\", \"Ortos\", \"Vanius\", \"Chandellia\", \"Lilikol\", \"Catca\", \"Cormus\", \"Yuela\", \"Ariban\", \"Tryton\", \"Fesscha\", \"Opalul\", \"Zakzos\", \"Hortimer\", \"Anklos\", \"Dushasiez\", \"Polop\", \"Mektal\", \"Orinphus\", \"Denatra\", \"Elkazzi\", \"Dyne\", \"Domos\", \"Letryal\", \"Manniv\", \"Sylestia\", \"Esnol\", \"Fasafuros\", \"Ghanfer\", \"Kahnite\", \"Sweyda\" ];\r\n\r\nexport default {\r\n  eyeColors,\r\n  hairColors,\r\n  skinColors,\r\n  backgrounds,\r\n  characterNames\r\n};\r\n","import DATA from '../data';\r\nimport axios from 'axios';\r\nconst DND_BASE_URL = \"http://www.dnd5eapi.co/api\";\r\n\r\nexport default class Character {\r\n\r\n  constructor(updateCharacter){\r\n\r\n    this.updateCharacter = updateCharacter;\r\n    this.character_name = \"Character Name\";\r\n    this.character_info = {\r\n      class: \"\",\r\n      background: \"\",\r\n      player_name: \"Jared Tanner\",\r\n      race: \"\",\r\n      alignment: \"\",\r\n      exp_points: 0\r\n    }\r\n    this.appearance = {\r\n      age: 23,\r\n      height: \"6ft, 3in\",\r\n      weight: \"178lbs\",\r\n      eyes: \"Blue\",\r\n      skin: \"Red\",\r\n      hair: \"Auburn\"\r\n    }\r\n    this.abilities = [\r\n      { // STR\r\n        name: 'strength',\r\n        score: 0,\r\n        skills: [\r\n          {\r\n            name: 'saving throws',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'athletics',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          }\r\n        ]\r\n      },\r\n      { // DEX\r\n        name: 'dexterity',\r\n        score: 0,\r\n        skills: [\r\n          {\r\n            name: 'saving throws',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'acrobatics',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'sleight of hand',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'stealth',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          }\r\n        ]\r\n      },\r\n      { // CON\r\n        name: 'constitution',\r\n        score: 14,\r\n        skills: [\r\n          {\r\n            name: 'saving throws',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          }\r\n        ]\r\n      },\r\n      { // INT\r\n        name: 'inteligence',\r\n        score: 14,\r\n        skills: [\r\n          {\r\n            name: 'saving throws',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'arcana',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'history',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'investigation',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'nature',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'religion',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          }\r\n        ]\r\n      },\r\n      { // WIS\r\n        name: 'wisdom',\r\n        score: 14,\r\n        skills: [\r\n          {\r\n            name: 'saving throws',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'animal handling',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'insight',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'medicine',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'perception',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'survival',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          }\r\n        ]\r\n      },\r\n      { // CHA\r\n        name: 'charisma',\r\n        score: 12,\r\n        skills: [\r\n          {\r\n            name: 'saving throws',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'deception',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'intimidation',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'performance',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          },\r\n          {\r\n            name: 'persuasion',\r\n            hasSkill: false,\r\n            modifier: 0\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    this.smAbilities = [\r\n      {\r\n        score: 2,\r\n        name: 'proficiency bonus'\r\n      },\r\n      {\r\n        score: 1,\r\n        name: 'inspiration'\r\n      },\r\n      {\r\n        score: 0,\r\n        name: 'passive wisdom (perception)'\r\n      }\r\n    ];\r\n    this.battleStats = {\r\n      armor_class: {\r\n        name: 'armor class',\r\n        value: 15\r\n      },\r\n      initiative: {\r\n        name: 'initiative',\r\n        value: 0\r\n      },\r\n      speed: {\r\n        name: 'speed',\r\n        value: 0\r\n      },\r\n      hit_points: {\r\n        name: 'current hit points',\r\n        value: 0,\r\n        max: { maxName: 'hit point maximum', maxValue: 22 }\r\n      },\r\n      temp_hit_points: {\r\n        name: 'temporary hit points',\r\n        value: 0\r\n      },\r\n      hit_dice: {\r\n        name: 'hit dice',\r\n        value: 'D10',\r\n        max: { maxName: 'total', maxValue: 1 }\r\n      },\r\n      death_saves: {\r\n        successes: 0,\r\n        failures: 2\r\n      }\r\n    };\r\n    this.attributes = [\r\n      {\r\n        content: [],\r\n        title: \"personality traits\",\r\n        columns: 1,\r\n        lines: 4\r\n      },\r\n      {\r\n        content: [],\r\n        title: \"ideals\",\r\n        columns: 1,\r\n        lines: 3\r\n      },\r\n      {\r\n        content: [],\r\n        title: \"bonds\",\r\n        columns: 1,\r\n        lines: 3\r\n      },\r\n      {\r\n        content: [],\r\n        title: \"flaws\",\r\n        columns: 1,\r\n        lines: 3\r\n      }\r\n    ];\r\n    this.textBoxes = {\r\n      languages: {\r\n        content: [],\r\n        title: \"Other Proficiencies & Languages\",\r\n        columns: 1,\r\n        lines: 10\r\n      },\r\n      equipment: {\r\n        content: [],\r\n        title: \"Equipment & Character Notes\",\r\n        columns: 2,\r\n        lines: 10\r\n      },\r\n      features: {\r\n        content: [],\r\n        title: 'features & traits',\r\n        columns: 1,\r\n        lines: 15\r\n      },\r\n      attacks: {\r\n        attacks: [\r\n          {\r\n            name: '',\r\n            atkBonus: 0,\r\n            dmg: [0, 0, 0], // _d_+_\r\n            dmgType: ''\r\n          },\r\n          {\r\n            name: '',\r\n            atkBonus: 0,\r\n            dmg: [0, 0, 0],\r\n            dmgType: ''\r\n          },\r\n          {\r\n            name: '',\r\n            atkBonus: 0,\r\n            dmg: [0, 0, 0],\r\n            dmgType: ''\r\n          }\r\n        ],\r\n        content: [],\r\n        title: \"attacks & spellcasting\",\r\n        columns: 1,\r\n        lines: 10\r\n      }\r\n    }\r\n\r\n\r\n\r\n    this.spellStats = {\r\n      spell_save_DC: 0,\r\n      spellcasting_ability: 0,\r\n      spell_attack_bonus: 0\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * utility methods\r\n   */\r\n  randomFromList(array){\r\n    let rand = Math.floor(Math.random() * array.length);\r\n    return array[rand];\r\n  }\r\n\r\n  rollDice(numTimes, numFaces){\r\n    let total = 0;\r\n    for (let i = 0; i < numTimes; i++){\r\n      total += ( Math.floor(Math.random() * numFaces) + 1 );\r\n    }\r\n    return total;\r\n  }\r\n  \r\n  bubble(numbers){ //bubble sort that I wrote for a toy problem\r\n    let done = false;\r\n    \r\n    for (var j = 0; !done; j++){\r\n      done = true;\r\n      for (let i = 0; i < numbers.length - 1; i++){\r\n        if (numbers[i] > numbers[i+1]){\r\n          //swap numbers\r\n          let temp = numbers[i];\r\n          numbers[i] = numbers[i+1];\r\n          numbers[i+1] = temp;\r\n          done = false;\r\n        }\r\n      }\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getModifier(score){\r\n    return Math.floor((score - 10) / 2);\r\n  }\r\n\r\n  getShorthandAbilities(){\r\n    let result = {};\r\n    this.abilities.map( a => {\r\n      result[a.name.split('').slice(0,3).join('')] = a.score;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * random-generation methods\r\n   */\r\n  randomClass(index){\r\n    axios.get(`${DND_BASE_URL}/classes/${index}`).then( response => {\r\n\r\n      // set up data\r\n      let { name, hit_die } = response.data\r\n      let { battleStats, character_info } = this\r\n\r\n      let abs = this.getShorthandAbilities()\r\n\r\n      // assign data\r\n      character_info.class = name;\r\n      battleStats.hit_points.max.maxValue = hit_die + this.getModifier(abs.con)\r\n      battleStats.hit_points.value = hit_die + this.getModifier(abs.con)\r\n      battleStats.hit_dice.value = `D${hit_die}`\r\n      battleStats.hit_dice.max.maxValue = 1\r\n\r\n      // spellCasting Stuff - NEEDS UPDATING - not currently in use\r\n      switch (this.character_info.class) {\r\n        case 'Barbarian':\r\n          this.spellStats.spellcasting_ability = '-';\r\n          break;\r\n        case 'Wizard':\r\n        case 'Fighter':\r\n        case 'Rogue':\r\n          this.spellStats.spellcasting_ability = this.getModifier(abs.int);\r\n          break;\r\n        case 'Bard':\r\n        case 'Paladin':\r\n        case 'Sorcerer':\r\n        case 'Warlock':\r\n        this.spellStats.spellcasting_ability = this.getModifier(abs.cha);\r\n          break;\r\n        case 'Cleric':\r\n        case 'Druid':\r\n        case 'Monk':\r\n        case 'Ranger':\r\n        this.spellStats.spellcasting_ability = this.getModifier(abs.wis);\r\n          break;\r\n        default:\r\n          console.log('not a valid class'); \r\n      };\r\n\r\n      if (this.spellStats.spellcasting_ability === '-'){\r\n        this.spellStats.spell_save_DC = '-';\r\n        this.spellStats.spell_attack_bonus = '-';\r\n      } else {\r\n        this.spellStats.spell_save_DC = 8 + this.battleStats.proficiency_bonus;\r\n        this.spellStats.spell_attack_bonus = this.battleStats.proficiency_bonus + this.spellStats.spellcasting_ability;\r\n      }\r\n\r\n      this.updateCharacter(this)\r\n\r\n    }).catch( () => \r\n    { console.log(\"Failed to get class\") }\r\n    );\r\n  }\r\n\r\n  randomRace(index){\r\n\r\n    axios.get(`${DND_BASE_URL}/races/${index}`).then( response => {\r\n\r\n      // set up\r\n      let { ability_bonuses, name, speed } = response.data;\r\n\r\n      // assign data\r\n      let { character_info, abilities, battleStats, smAbilities } = this;\r\n      character_info.race = name;\r\n      battleStats.speed.value = speed;\r\n\r\n      abilities.forEach((ab, i) => {\r\n        ab.score += ability_bonuses[i]\r\n      })\r\n\r\n      let dex = abilities.find(a => a.name === \"dexterity\").score\r\n      let wis = abilities.find(a => a.name === \"wisdom\").score\r\n\r\n      battleStats.armor_class.value = this.getModifier(dex) + 10;\r\n      smAbilities[2].score = this.getModifier(wis) + 10;\r\n      battleStats.initiative.value = this.getModifier(dex);\r\n\r\n      this.updateCharacter(this); // function passed into from App, bound to app\r\n\r\n    }).catch( () => \r\n    { console.log(\"Failed to get race\") }\r\n    );\r\n\r\n  }\r\n\r\n  // returns result of rolling 4d6, and taking the heighest 3\r\n  randomAbility(){\r\n    let rolls = [];\r\n    for (let i = 0; i < 4; i++){\r\n      rolls.push(this.rollDice(1, 6));\r\n    }\r\n\r\n    rolls = this.bubble(rolls); // sort to take highest 3\r\n    return rolls[1] + rolls[2] + rolls[3];\r\n  }\r\n\r\n  randomAlignment(){\r\n    const first = this.randomFromList([ \"Lawful\", \"Nuetral\", \"Chaotic\" ]);\r\n    const second = this.randomFromList([ \"Good\", \"Nuetral\", \"Evil\" ]);\r\n\r\n    if (first === second){\r\n      return \"True-Nuetral\";\r\n    } else{\r\n      return `${first}-${second}`;\r\n    }\r\n  }\r\n\r\n  randomize(){\r\n    \r\n    let { abilities, character_info, smAbilities, appearance } = this\r\n    let { backgrounds, characterNames, eyeColors, skinColors, hairColors } = DATA\r\n\r\n    // abilities\r\n    abilities.forEach(ability => {\r\n      let num = this.randomAbility();\r\n      ability.score = num;\r\n      ability.skills.forEach(skill => {\r\n        skill.modifier += this.getModifier(num);\r\n      });\r\n    });\r\n    \r\n    // // race, speed, ability bonuses, AC, passive perception, initiative\r\n    this.randomRace(this.rollDice(1, 9)); // 9 races\r\n\r\n    // // class, hitpoints, spellstats\r\n    this.randomClass(this.rollDice(1, 12)); // 12 classes\r\n\r\n    // background\r\n    character_info.background = this.randomFromList(backgrounds);\r\n\r\n    // alignment\r\n    character_info.alignment = this.randomAlignment();\r\n\r\n    // character name\r\n    this.character_name = this.randomFromList(characterNames);\r\n\r\n    // exp points, proficiency bonus\r\n    character_info.exp_points = '0'; // always level one (for now)\r\n    smAbilities[0].score = 2;\r\n\r\n    // appearancs - NEED TO MAKE DYNAMIC BASED ON RACE - not currently in use\r\n    appearance.age = Math.floor(Math.random() * 180) + 20;\r\n    appearance.height = 4 + (Math.floor(Math.random() * 30) / 10);\r\n    appearance.weight = Math.floor(Math.random() * 140) + 60;\r\n    appearance.eyes = this.randomFromList(eyeColors);\r\n    appearance.skin = this.randomFromList(skinColors);\r\n    appearance.hair = this.randomFromList(hairColors);\r\n\r\n  }\r\n}","import React from 'react'\r\n\r\nexport default function Header(props){\r\n\r\n  let { info, character_name } = props;\r\n  let attributes1 = []\r\n  let attributes2 = []\r\n  let i = 1;\r\n\r\n  for (let key in info){\r\n    let className = key.split('_');\r\n    let pText = className.join(' ');\r\n    className = className.join('-');\r\n\r\n    if (i > 3) {\r\n      attributes2.push(\r\n        <div className=\"attribute\" key={key}>\r\n          <p className=\"hand\">{info[key]}</p>\r\n          <p>{pText}</p>\r\n        </div>\r\n      )\r\n      i++\r\n    } else {\r\n      attributes1.push(\r\n        <div className=\"attribute\" key={key}>\r\n          <p className=\"hand\">{info[key]}</p>\r\n          <p>{pText}</p>\r\n        </div>\r\n      )\r\n      i++\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n      <div className=\"left\">\r\n        <h2>DUNGEONS & DRAGONS</h2>\r\n        <div className=\"character-name white-box\">\r\n          <p className=\"hand\">{character_name}</p>\r\n          <p>character name</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"white-box attributes-box\">\r\n        <div className=\"attributes\">\r\n          { attributes1 }\r\n        </div>\r\n        <div className=\"attributes\">\r\n          { attributes2 }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function TextBox(props){\r\n  let { className, data } = props\r\n  let { content, title, columns, lines, attacks } = data;\r\n\r\n  if (attacks){\r\n    attacks = attacks.map((atk, i) => \r\n      {\r\n        return (\r\n          (atk.name)\r\n          ?\r\n          <tr className=\"attack\" key={i}>\r\n            <td className=\"hand\">{atk.name}</td>\r\n            <td className=\"hand\">{`+${atk.atkBonus}`}</td>\r\n            <td className=\"hand\">{`${atk.dmg[0]}d${atk.dmg[1]}+${atk.dmg[2]} ${atk.dmgType}`}</td>\r\n          </tr>\r\n          :\r\n          <tr className=\"attack\" key={i}>\r\n            <td className=\"hand\">{'-'}</td>\r\n            <td className=\"hand\">{' '}</td>\r\n            <td className=\"hand\">{' '}</td>\r\n          </tr>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  let col1 = [];\r\n  for (let i = 0; i < lines; i++){\r\n    col1.push(\r\n      <p className=\"text-line hand\" key={i}>{content[i] ? `- ${content[i]}` : `- `}</p>\r\n    )\r\n  }\r\n  let col2 = []\r\n  if (columns > 1){\r\n    for (let i = lines; i< lines*2; i++){\r\n      col2.push(\r\n        <p className=\"text-line hand\"key={i}>{content[i] ? `- ${content[i]}` : `- `}</p>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`TextBox white-box` + (className ? ` ${className}` : '')}>\r\n      {\r\n        attacks\r\n        ?\r\n        <table className=\"attacks\"><tbody>\r\n          <tr>\r\n            <td>name</td>\r\n            <td>atk bonus</td>\r\n            <td>dmg/type</td>\r\n          </tr>\r\n          { attacks }\r\n        </tbody></table>\r\n        :\r\n        <div></div>\r\n      }\r\n\r\n      <div className=\"col\">\r\n        { col1 }\r\n      </div>\r\n      <div className=\"col\">\r\n        { col2 }\r\n      </div>\r\n      <p className=\"title\">{ title.toUpperCase() }</p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Ability(props){\r\n\r\n  let { getModifier, data } = props;\r\n  let { name, score, skills } = data;\r\n\r\n  let skillComponents = skills.map((skill, i) => {\r\n    let { hasSkill, modifier, name } = skill\r\n    return (\r\n      <div className=\"skill\" key={i}>\r\n        <input type=\"checkbox\" value={hasSkill}/>\r\n        <p className=\"modifier\">{`${(modifier >= 0 ? '+' : '' )}${modifier}`}</p>\r\n        <p>{name}</p>\r\n      </div>\r\n    );\r\n  })\r\n\r\n  return (\r\n    <div className=\"Ability\">\r\n      <div className=\"left white-box\">\r\n        <p className=\"score hand\">{score}</p>\r\n        <h2 className=\"modifier hand\">{ `${(score > 9 ? '+' : '')} ${getModifier(score)}` }</h2>\r\n        <p className=\"name\">{name}</p>\r\n      </div>\r\n      <div className=\"right\">\r\n        { skillComponents }\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SmallAbility(props){\r\n\r\n  let { name, score } = props;\r\n\r\n  return (\r\n    <div className=\"SmallAbility\">\r\n      <div className=\"score white-box hand\"><h3>{score}</h3></div>\r\n      <div className=\"name white-box\"><p>{name}</p></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nimport Ability from './Ability'\r\nimport SmallAbility from './SmallAbility'\r\n\r\nexport default function AbilitiesBox(props) {\r\n\r\n  let { abilities, smAbilities, getModifier } = props;\r\n\r\n  let abilityList = abilities.map((ability, i) => \r\n    <Ability data={ability} getModifier={getModifier} key={i} />\r\n  );\r\n  let smAbilityList = smAbilities.map((sm, i) => \r\n    <SmallAbility score={sm.score} name={sm.name} key={i} />\r\n  )\r\n\r\n  return (\r\n    <div className=\"AbilitiesBox gray-box\">\r\n      { smAbilityList[0] }\r\n      { smAbilityList[1] }\r\n      { abilityList }\r\n      { smAbilityList[2] }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Stat(props){\r\n\r\n  let { name, value, max } = props.data;\r\n\r\n  if (max){\r\n    var maxComponent = (\r\n      <div className=\"max\">\r\n        <p>{max.maxName}</p> <p className=\"hand\">{max.maxValue}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"Stat white-box\">\r\n      {\r\n        max\r\n        ?\r\n        maxComponent\r\n        :\r\n        ''\r\n      }\r\n      <h2 className=\"hand\">{value}</h2>\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function DeathSaves(props){\r\n  let { successes, failures } = props.data;\r\n\r\n  let checkBoxes = function(n){\r\n    let result = [0, 0, 0]\r\n    for (let i = 0; i < n; i++){\r\n      result[i] = 1;\r\n    }\r\n\r\n    return result.map((item,i) => {\r\n      return (\r\n        <input type=\"checkbox\" value={item} key={i}/>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"DeathSaves white-box\">\r\n      <div className=\"row\">\r\n        <p>successes</p>\r\n        { checkBoxes(successes) }\r\n      </div>\r\n      <div className=\"row\">\r\n        <p>failures</p>\r\n        { checkBoxes(failures) }\r\n      </div>\r\n      <p>death saves</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport Stat from './Stat'\r\nimport DeathSaves from './DeathSaves'\r\n\r\nexport default function BattleStats(props){\r\n\r\n  let { armor_class, initiative, speed, hit_points, temp_hit_points, hit_dice, death_saves } = props.battleStats;\r\n\r\n  return (\r\n    <div className=\"BattleStats gray-box\">\r\n      <div className=\"row\">\r\n        <Stat data={armor_class}/>\r\n        <Stat data={initiative}/>\r\n        <Stat data={speed}/>\r\n      </div>\r\n\r\n      <Stat data={hit_points}/>\r\n      <Stat data={temp_hit_points}/>\r\n\r\n      <div className=\"row\">\r\n        <Stat data={hit_dice}/>\r\n        <DeathSaves data={death_saves}/>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './App.css'\r\n\r\nimport Character from './components/Character'\r\nimport Header from './components/Header'\r\nimport TextBox from './components/TextBox'\r\nimport AbilitiesBox from './components/AbilitiesBox'\r\nimport BattleStats from './components/BattleStats'\r\n\r\n// const DND_BASE_URL = \"http://www.dnd5eapi.co/api\"\r\n\r\n////////\r\n// APP\r\n////////\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      character: new Character(this.updateCharacter)\r\n    }\r\n\r\n    this.randomizeCharacter = this.randomizeCharacter.bind(this);\r\n    this.updateCharacter = this.updateCharacter.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.randomizeCharacter();\r\n  }\r\n\r\n  // this is going to be passed to the Character Class, so that it can make changes once it recieve certain data asynchronously\r\n  updateCharacter(obj){\r\n    this.setState({character: obj});\r\n  }\r\n\r\n  getModifier(score){\r\n    return Math.floor((score - 10) / 2);\r\n  }\r\n\r\n  // when 'randomize' button is clicked\r\n  randomizeCharacter(){\r\n    // make blank character\r\n    let randomCharacter = new Character(this.updateCharacter);\r\n    randomCharacter.randomize();\r\n\r\n    // quick note: no need to call setState() here, because it is being called in the 'updateCharacter' function that we sent to the character class, and used 'bind' to set the context to the App Component.\r\n  }\r\n\r\n  render() {\r\n\r\n    let { character_info, character_name, abilities, smAbilities, battleStats, attributes, textBoxes } = this.state.character;\r\n    let { languages, equipment, features, attacks } = textBoxes;\r\n\r\n    // for attributes box\r\n    attributes = attributes.map((item, i) => {\r\n      return (\r\n        <TextBox data={item} key={i}/>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        {/* Page 1 */}\r\n        <div className=\"page page-1\">\r\n          <Header character_name={character_name} info={character_info}/>\r\n          <div className=\"middle\">\r\n            <AbilitiesBox abilities={abilities} smAbilities={smAbilities} getModifier={this.getModifier} />\r\n            <div className=\"middle-center\">\r\n              <BattleStats battleStats={battleStats} />\r\n              <TextBox data={attacks} />\r\n            </div>\r\n            <div className=\"middle-right\">\r\n              <div className=\"gray-box\"> { attributes } </div>\r\n              <TextBox data={features} />\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <TextBox className={'first'} data={languages} />\r\n            <TextBox className={'second'} data={equipment} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* PAGE 2 */}\r\n        {/* <Header character_name={character_name} info={appearance}/> */}\r\n\r\n        {/* post-script */}\r\n        <div className=\"post-script\">\r\n          <h4>Just a few things:</h4>\r\n          <ol>\r\n            <li>Thanks for checking out this project I made! Code can be found <a href=\"https://github.com/Deraj21/dnd-character-generator\">here</a> on github. I will try to keep it up to date with the next feature I am working on</li>\r\n            <li>Reload page to re- randomize</li>\r\n            <li>Ctrl-P to print. Works best with Chrome browser. Make sure \"background graphics\" are on. Margins should be set to \"default.\" Just print the first page, if you don't want this included</li>\r\n          </ol>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}